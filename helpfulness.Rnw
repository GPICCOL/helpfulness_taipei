\documentclass[a4paper,11pt]{article}
\usepackage{geometry}
\usepackage[utf8]{inputenc}

\SweaveOpts{echo=false, eps=false, keep.source=true, width=12, height=7}
\title{Helpfulness}
\author{Bettina Gr\"un}
\begin{document}
\maketitle


<<>>=
.libPaths(c("lib", .libPaths()))
load(file.path("bettina2.rda"))
@ 
Original data:
<<>>=
cat("Number of observations:", nrow(usedata), "\n")
cat("Number of regions", length(unique(usedata$region_id)), "\n")
cat("Number of hotels", length(unique(usedata$offering_id)), "\n")
cat("Date range:", as.character(min(usedata$date)), "to", as.character(max(usedata$date)), "\n")
@ 

<<>>=
review_2012 <- subset(usedata, date >= "2012-02-01" & date <= "2012-05-31")
is.na(review_2012$ratings.overall[review_2012$ratings.overall == 0]) <- TRUE
nreviews <- xtabs(~date + offering_id, data = usedata)
nreviews <- apply(nreviews, 2, function(x) rev(cumsum(rev(x))))
review_2012$nreviews <- nreviews[cbind(as.character(review_2012$date), review_2012$offering_id)]
O <- with(usedata, order(offering_id, date, id))
odata <- usedata[O, c("offering_id", "date", "id")]
endday <- as.Date("2012-12-21") 
odata$firstpage <- unlist(with(odata, tapply(date, offering_id, 
                                             function(x) if (length(x) > 10) c(x[-c(1:10)], rep(endday, 10)) - x else endday - x)))
odata$untilend <- unlist(with(odata, tapply(date, offering_id, 
                                             function(x) if (length(x) > 10) rep(0:1, c(length(x) - 10, 10)) else rep(1, length(x)))))				     
review_2012 <- merge(review_2012, odata[, c("id", "firstpage", "untilend")], by = "id", all.x = TRUE)
@ 
All reviews:
<<>>=
dim(review_2012)
@ 

Number of reviews on first page until end of observation period:
<<>>=
table(review_2012$untilend)
prop.table(table(review_2012$untilend))
@ 

After removing reviews with 1000 or more words and missing overall rating:
<<>>=
review_2012 <- subset(review_2012, review_words < 1000 & !is.na(ratings.overall))
dim(review_2012)
@ 

Number of reviews on first page until end of observation period:
<<>>=
table(review_2012$untilend)
prop.table(table(review_2012$untilend))
@ 

Descriptive Statistics:
<<>>=
vars <- review_2012[, c("num_helpful_votes", "nreviews", "firstpage", "ratings.overall", "breadth", "review_words")]
descriptive <- t(apply(vars, 2, function(x) c(Mean = mean(x), SD = sd(x), min = min(x), max = max(x))))
round(descriptive, digits = 2)
write.csv(descriptive, file = "descriptive.csv")
@ 

<<>>=
library("lme4")
r_squared <- function(model) {
  X <- model.matrix(model)
  rand_formula <- reformulate(sapply(findbars(formula(model)), function(x) paste0("(", deparse(x), ")")), response=".")
  null_mod <- update(model, rand_formula, data = review_2012)
  VarF <- var(predict(model, REform = FALSE, type = "link"))
  sigma <- unlist(VarCorr(model))
  if ("unit" %in% names(sigma)) {
  VarRand <- sum(sigma[-grep("unit", names(sigma))])
  VarResid <- sigma["unit"] + log(1 + 1/exp(fixef(null_mod)))
  } else {
  VarRand <- sum(sigma)
  VarResid <- log(1 + 1/exp(fixef(null_mod)))
  }
  Rm <- VarF/(VarF + VarRand + VarResid)
  Rc <- (VarF + VarRand)/(VarF + VarRand + VarResid)
  c(Rm = Rm, Rc = Rc)
}
newdata <- data.frame(review_words = rep(c(50, 100, 150, 200), each = 6),
                      breadth = rep(0:5, 4),
		      ratings.overall = mean(review_2012$ratings.overall, na.rm = TRUE),
                      nreviews = mean(review_2012$nreviews),
		      firstpage = mean(review_2012$firstpage))
formula <- c("num_helpful_votes ~ log(nreviews) * I(log(firstpage + 1)) + ratings.overall",
             "num_helpful_votes ~ log(nreviews) * I(log(firstpage + 1)) + ratings.overall + review_words * breadth + I(review_words^2) + I(breadth^2)")
FILE <- c("helpfulness-null.rda", "helpfulness-base.rda")
for (i in 1:2) {
if (FILE[i] %in% list.files()) load(FILE[i]) else {
  glmm <- glmer(paste(formula[i], "+ (1 | offering_id) + (1 | author.id)", sep = ""),
                verbose = 2, data = review_2012, family = "poisson")
  r2 <- r_squared(glmm)
  save(glmm, r2, file = FILE[i])
}
cat(gsub(".rda", "", FILE[i]), "\n")
assign(gsub("-", "_", gsub(".rda", "", FILE[i])), glmm)
printCoefmat(round(coef(summary(glmm)), digits = 4)) 

names(r2) <- c("Marginal R2", "Conditional R2")
print(round(r2, digits = 4))
assign(paste("r2", gsub("-", "_", gsub(".rda", "", FILE[i])), sep = "_"), r2)

pred <- cbind(newdata, p = predict(glmm, newdata, REform = NA, type = "response"))
assign(paste("pred", gsub("-", "_", gsub(".rda", "", FILE[i])), sep = "_"), pred)

if (i != 1) {
change1 <-  sapply(c(50, 100, 150, 200), function(words) {
  p <- subset(pred, review_words == words)$p
  c("0 to 5" = p[6] / p[1],
    "1 to 2" = p[3] / p[2], 
    "2 to 5" = p[6] / p[3])
})
colnames(change1) <- c("50", "100", "150", "200")
print(change1)
change2 <-  sapply(c(1, 3, 5), function(complete) {
  p <- subset(pred, breadth == complete)$p
  c("50 to 100" = p[2] / p[1],
    "100 to 150" = p[3] / p[2],
    "150 to 200" = p[4] / p[3],
    "100 to 200" = p[4] / p[2])
})
colnames(change2) <- c("1", "3", "5")
print(change2)
}
cat("\n%%------------------------------------------------------------------%%\n\n")
}
@ 

<<>>=
Coefs <- list(null = coef(summary(helpfulness_null))[,c(1, 2, 4)],
              base = coef(summary(helpfulness_base))[,c(1, 2, 4)])
Max <- max(sapply(Coefs, nrow))
mat <- do.call("cbind", lapply(Coefs, function(x) {
  xorig <- x
  xnames <- rownames(x)
  x[, 1:2] <- format(round(x[, 1:2], digits = 4), nsmall = 4)
  x[, 2] <- paste("(", x[,2], ")", sep = "")
  x[, 3] <- as.character(cut(xorig[,3], c(0, 0.001, 0.01, 0.05, 1), c("***", "**", "*", ""), include.lowest = TRUE))
  x <- apply(x[, c(1, 3, 2)], 1, paste, collapse = " ")
  y <- vector("character", length = nrow(Coefs[[2]]))
  names(y) <- rownames(Coefs[[2]])
  y[xnames] <- x
  y
  }))
mat <- rbind(mat,
             cbind(r2_helpfulness_null, r2_helpfulness_base))
write.csv(mat, file = "regcoefs.csv")
@ 


<<>>=
myplot <- function(review_words, breadth = 0:5, phi = 30, theta = -30) {
    weight <- xtabs(~ review_2012$breadth + cut(review_2012$review_words, c(-Inf, review_words)))
    weight[weight > 100] <- 100
    weight <- weight / max(weight)
    
    p <- predict(glmm, newdata = data.frame(breadth = rep(breadth, n),
                           review_words = rep(review_words, each = length(breadth)),
                           nreviews = mean(review_2012$nreviews),
                           firstpage = mean(review_2012$firstpage), ratings.overall = mean(review_2012$ratings.overall)),
                 REform = NA)
    
    nbcol <- 100
    color <- rev(colorspace::heat_hcl(nbcol))
    z <- matrix(p, nrow = length(breadth))
    nrz <- nrow(z)
    ncz <- ncol(z)
    zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
    wfacet <- (weight[-1, -1] + weight[-1, -ncz] + weight[-nrz, -1] + weight[-nrz, -ncz])/ 4
    facetcol <- cut(zfacet, nbcol)
    cols <- color[facetcol]
    colsalpha <- col2rgb(cols)
    colsalpha <- sapply(seq_along(facetcol), function(i)
                        do.call("rgb", as.list(c(colsalpha[,i] / 255, alpha = wfacet[i] / max(wfacet)))))
    
    persp(breadth, review_words, z, col = colsalpha, phi = phi, theta = theta,
          ticktype = "detailed", ylab = "Review Depth", xlab = "Review Completeness", zlab = "Effect")
}
@ 

<<3dplot, fig=true, png=true, pdf=false, eps=false>>=
n <- 50
review_words <- seq(50, 200, length.out = n)
myplot(review_words, phi = 0, theta = -30)
@ 

Information on session:
<<>>=
sessionInfo()
@ 

\end{document}